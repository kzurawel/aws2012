Date: Tue, 03 Nov 2009 20:40:40 +0000
Categories: articles
Tags: adobe,flash,flex,google wave,html5,javascript,lock-in,open government,open source,pdf,proprietary
dsq_thread_id: 444981542
Permalink: http://arborwebsolutions.com/2009/11/adobe-opengov-and-flash/
Summary: Why proprietary formats will never be the foundation of open government.

# Adobe, OpenGov, and Flash

When President Obama announced that one of his goals was greater
government transparency, I was thrilled. When the White House announced
that it was switching to open-source Drupal, I was even more thrilled.
Not only were we promised a flood of open, accessible data from the
government, but open source would have a real place at the table for the
first time ever. Open data would allow people outside the government to
collect, mash up, and mine that data for any purpose imaginable.
Government would finally be accountable to the people, now that the
people would have tools that could help them audit government
activities. 

And yet, as grand as these ideas sound, we're not really out
of the woods yet. For one thing, the very definition of "open" is up in
the air. Tomorrow, Adobe is holding a conference in Washington, D.C. to
convince federal employees that proprietary technologies like Flash and
PDF are "essential" to creating open government. Why are they so
essential, you might ask? Well, according to Adobe, "[s]ince the advent
of the web, an entire infrastructure has evolved to enable public access
to information. Such technologies include HTML, Adobe PDF, and Adobe®
Flash® technology." Yes, that's right, PDF and Flash technologies date
back to "the advent of the web!" And as the Sunlight Foundation says,
"Here's a hint-- if the data format has an ® by its name, it probably
isn't great for transparency or open data." 

Yes, vast numbers of people
have the Flash plugin installed on their browser; yes, vast numbers of
people have a PDF reader installed on their computer. But the ability of
the "average user" to access government data doesn't constitute open
government. Can screen readers understand Flash content? (This is a real
question; I don't honestly know.) Should the American public
realistically be expected to support a non-governmental company like
Adobe (by downloading and installing their software, and by making
government purchase Flash / PDF creation tools) just to get some
information about what Congress is doing? Sure, PDF is an "open
standard" with multiple implementations, and it's head-and-shoulders
above Microsoft Word in terms of openness, but pulling text data out of
PDFs takes a lot of work. 

There are certainly alternatives. At the
"advent of the web" that Adobe calls us to remember, linked text
documents were the norm. Not Flash; not PDF; not any form of styled
display technology. The Web was data in its purest state, marked up only
in semantic ways to indicate lists, paragraphs, and tables (which didn't
even arrive until HTML2!). I happen to think that this format is perfect
for government data as well. When was the last time you thought to
yourself that a federal statute would be more open and accessible if it
just had some animation? When was the last time you seriously cared
about what font a government press release was issued in, or what each
page's headers and footers looked like? Perhaps there is a place for
archival storage of documents in a true-to-life format - even so, those
archives should be storing images in an open format like TIFF, while
saving machine-readable (and general-purpose use) data for marked-up
text.

### Flash's eternal game of catch-up

This news story makes me think about my experiences with the Flash
Platform over the last year. Originally, I was anti-Flash. I couldn't
understand why anyone would want to pay Adobe large amounts of money for
Flash Professional - the *only* way to produce content for Flash Player
- just to make content that would only work by way of a plugin. Times
changed bit by bit; Adobe started creating actually usable versions of
Flash Player for Linux, and the Flex framework became mainstream and
open-source. Finally you could write Flash apps entirely in ActionScript
in a text editor! Of course, you still needed that plugin to make things
work at the other end, but the plugin was available pretty much
everywhere. 

I really got interested in Flash when I saw a website that
used Flex to make pie charts on-the-fly from numbers in a database. I
was amazed - this was real eye candy created by programmatic means. I
had been interested in data visualization already, and Flex seemed too
good to pass up. I learned my way around Flex Builder 3 (available free
to students), picked up some basic ActionScript skills, and started
making simple web apps. 

Then the disappointment started hitting home.

"What do you mean there's no Flash support for iPhone?" That was where
things started going downhill. Apple, creator of quite likely the most
impressive personal gadget ever devised, had flat-out said no to Adobe.
Even Youtube, the first site to really show off the power of streaming
Flash video, had agreed to *convert their entire archive* to another
format just to please Apple. And it wasn't even a hacky kludge - h.264
Youtube actually worked well. So why should anyone bother to lock their
content into Flash Video? 

Then I started noticing more and more problems
with the Flash plugin. It was unresponsive; it hogged system resources;
it crashed my browser. Finally, I started reading about Google Wave.
Here was HTML5 and the best of JavaScript together in one, and it did
everything the Flash Player could do only better. So I've turned my back
on Flash for the time being. I'm interested to see what happens with
Flex 4, but I'm not planning any big projects using it. As the browser
wars have taught us, technology inevitably moves toward standardization
and open formats. Even Adobe seems to realize this - Dreamweaver CS5 can
create HTML5 charts and graphs from data sources, instead of making Flex
charts. 

Flash is in a sorry state, and I hope that Adobe will either
find a new way to revitalize this platform, bringing in the designers
and developers it has alienated over the years, or else put Flash out of
its misery and develop the tools that will make designers fall in love
with HTML5 the same way they fell in love with Macromedia Flash MX. Ok,
rant mode off. Any personal feelings about the Flash Platform or open
government that you'd like to share? I'd especially like to hear from
anyone in the Miami area; South Florida seems to be overflowing with
Flash designers and Flash-only websites.
